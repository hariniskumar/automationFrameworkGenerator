package ${page.pageValidatorPackageName};

import static org.testng.Assert.assertTrue;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.By;
import org.openqa.selenium.WebElement;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Parameters;
import org.testng.annotations.Test;

import ${page.packageName}.${page.pageName};
import ${basePackageName}.tool.BrowserUtil;

public class ${page.PageValidatorName}{

	WebDriver driver;

	@BeforeMethod
	@Parameters({ "browser", "baseUrl" })
	public void setup(String browser, String baseUrl) {
		System.out.println(baseUrl);
		driver = BrowserUtil.getWebDriver(browser);
		driver.get(baseUrl);
		//TODO: other necessary code before test is executed		
	}

	@Test
	public void ${page.pageName}ValidationTest() {
				
		${page.pageName} ${page.pageNameBeginLowerCase} = new ${page.pageName}(driver);
		By locator;
		WebElement element;
		boolean isElementPDE;
		
		#foreach($element in $elements)
			//Element:$element.elementName   Type:$element.elementType
			#if($element.defElementType)
				//$element Type:$element.elementType
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}();
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);
			#end

			#if($element.lblElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}();
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);
			#end

			#if($element.txtElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}();
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);
			#end

			#if($element.singleSelListElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}();
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);				
			#end

			#if($element.stackElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}();
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);			
			#end

			#if($element.txtInStackElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}(0);
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);
			#end

			#if($element.singleSelListInStackElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}(0);
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);				
			#end

			#if($element.defInStackElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}(0);
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);				
			#end

			#if($element.txtFileUploadElementType)
				locator = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}Locator();
				element = ${page.pageNameBeginLowerCase}.get${element.elementNameCapitalized}();
				isElementPDE = ${page.pageNameBeginLowerCase}.isElementPresentDisplayedAndEnabled(locator, element);
				assertTrue(isElementPDE);
			#end
			
		#end
	}
	
	@AfterMethod(alwaysRun = true)
	public void teardown() {
		//BrowserUtil.sleep(2000);
		driver.quit();
	}
}
